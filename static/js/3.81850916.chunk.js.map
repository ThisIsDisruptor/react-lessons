{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","src","message","likesCount","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","requiredField","MyPosts","React","memo","postsElements","profilePage","posts","map","post","postsBlock","formData","console","log","addPost","newPostText","functionsToProps","MyPostsContainer","connect","state","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","userId","photos","large","small","descriptionBlock","alt","Preloader","isFetching","Profile","ProfileAPIComponent","this","match","params","authorizedUserId","history","getProfileInfo","getStatus","Component","getProfileInfoThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","ProfileComponent","compose","withRouter","auth","id","isAuth"],"mappings":"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","file":"static/js/3.81850916.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__2Em1q\",\"postsBlock\":\"MyPosts_postsBlock__kHrtZ\",\"posts\":\"MyPosts_posts__h2ZPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3oHn9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3l9un\"};","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://i.pinimg.com/236x/b7/49/48/b749481dbd97281c159bd9a8b055c432.jpg\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  requiredField,\r\n} from \"../../../utils/valodators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <div>\r\n          <Field\r\n            component={Textarea}\r\n            placeholder=\"Post Message\"\r\n            name=\"newPostText\"\r\n            validate={[requiredField, maxLength10]}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n  form: \"addPost\",\r\n})(AddPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  // shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n  //   return nextProps !== this.props || nextState !== this.state;\r\n  // }\r\n\r\n  let { posts } = props.profilePage;\r\n\r\n  let postsElements = posts.map((post) => (\r\n    <Post message={post.message} likesCount={post.likesCount} />\r\n  ));\r\n\r\n  const onAddPost = (formData) => {\r\n    console.log(formData);\r\n    props.addPost(formData.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      My posts\r\n      <div>\r\n        <AddPostReduxForm onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={classes.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n  };\r\n};\r\n\r\nlet functionsToProps = {\r\n  addPost,\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, functionsToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  //local state\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>ProfileStatus!</div>\r\n      {!editMode && (\r\n        <div>\r\n          <span\r\n            onDoubleClick={() => {\r\n              activateEditMode();\r\n            }}\r\n          >\r\n            {props.status || \"No status\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={() => {\r\n              deactivateEditMode();\r\n            }}\r\n            value={status}\r\n            onChange={onStatusChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader isFetching={true} />;\r\n  } else {\r\n    let {\r\n      aboutMe,\r\n      contacts: {\r\n        facebook,\r\n        website,\r\n        vk,\r\n        twitter,\r\n        instagram,\r\n        youtube,\r\n        github,\r\n        mainLink,\r\n      },\r\n      lookingForAJob,\r\n      lookingForAJobDescription,\r\n      fullName,\r\n      userId,\r\n      photos: { small, large },\r\n    } = props.profile;\r\n\r\n    let { status, updateStatus } = props;\r\n\r\n    return (\r\n      <div>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        <div className={classes.descriptionBlock}>\r\n          <div>\r\n            <img src={large} alt=\"\" />\r\n          </div>\r\n          <div>Info</div>\r\n          <div>Имя: {fullName}</div>\r\n          <div>Обо мне: {aboutMe}</div>\r\n          <div>\r\n            Контакты\r\n            <br />\r\n            <br />\r\n            <div>facebook: {facebook}</div>\r\n            <div>website: {website}</div>\r\n            <div>vk: {vk} </div>\r\n            <div>twitter: {twitter}</div>\r\n            <div>instagram: {instagram} </div>\r\n            <div>youTube: {youtube} </div>\r\n            <div>github: {github} </div>\r\n            <div>mainLink: {mainLink} </div>\r\n            <br />\r\n          </div>\r\n          <div>Ищу работу: {lookingForAJob ? \"Да\" : \"Нет\"}</div>\r\n          <div>Описание поиска работы: {lookingForAJobDescription}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProfileInfoThunkCreator,\r\n  getStatusThunkCreator,\r\n  updateStatusThunkCreator,\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileAPIComponent extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      //userId = 2;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getProfileInfo(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nlet functionsToProps = {\r\n  getProfileInfo: getProfileInfoThunkCreator,\r\n  getStatus: getStatusThunkCreator,\r\n  updateStatus: updateStatusThunkCreator,\r\n};\r\n\r\nlet ProfileComponent = compose(\r\n  //withAuthRedirect,\r\n  withRouter,\r\n  connect(mapStateToProps, functionsToProps)\r\n)(ProfileAPIComponent);\r\n\r\nexport default ProfileComponent;\r\n"],"sourceRoot":""}